.custom-md {
  h1 {
    @apply text-3xl;
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    .anchor {
      @apply transition -m-0.5 ml-[0.2ch] p-0.5 select-none opacity-0 no-underline !important;

      .anchor-icon {
        @apply mx-[0.45ch] !important;
      }
    }

    &:hover {
      .anchor {
        @apply opacity-100 !important;
      }
    }
  }

  a:not(.no-styling) {
    @apply relative bg-none link font-medium text-[var(--primary)]
        underline decoration-[var(--link-underline)] decoration-1 decoration-dashed underline-offset-4;
    box-decoration-break: clone;
    -webkit-box-decoration-break: clone;
    display: inline-block;

    &:hover,
    &:active {
      @apply decoration-transparent;
      background: var(--btn-plain-bg-hover);
      border-bottom: 1px dashed var(--link-hover);
      text-decoration: none;
    }
  }

  /* Inline code only: avoid overriding Expressive Code token colors */
  :not(pre) > code {
    @apply bg-[var(--inline-code-bg)] text-[var(--inline-code-color)] px-1 py-0.5 rounded-md overflow-hidden;
    font-family: "JetBrains Mono Variable", ui-monospace, SFMono-Regular, Menlo,
      Monaco, Consolas, Liberation Mono, Courier New, monospace;
    &:before {
      content: none;
    }
    &:after {
      content: none;
    }
  }

  /* Non-Expressive Code block code (fallback), keep numbering styles without forcing color */
  :not(.expressive-code) pre code {
    counter-reset: line;
  }
  :not(.expressive-code) pre code span.line {
    &:before {
      @apply text-white/25 mr-4 w-4 inline-block;
      content: counter(line);
      counter-increment: line;
      direction: rtl;
    }
    &:last-child:empty,
    &:last-child:has(> span:empty:only-child) {
      display: none;
    }
  }

  .copy-btn {
    all: initial;
    /* Use theme-aware neutral button variables instead of fixed dark scheme */
    @apply opacity-0 shadow-lg shadow-black/50 absolute active:scale-90 h-8 w-8 top-3 right-3 text-sm rounded-lg transition-all ease-in-out z-20 cursor-pointer;
    @apply bg-[var(--btn-regular-bg)] hover:bg-[var(--btn-regular-bg-hover)] active:bg-[var(--btn-regular-bg-active)] text-[var(--btn-content)];
    /* Material-like subtle elevation */
    box-shadow: 0 1px 2px rgba(0 0 0 / 0.18), 0 1px 3px rgba(0 0 0 / 0.12);
  }
  .frame:hover .copy-btn {
    opacity: 1;
    box-shadow: 0 2px 6px rgba(0 0 0 / 0.2), 0 2px 4px rgba(0 0 0 / 0.12);
  }
  .copy-btn:active {
    box-shadow: 0 1px 2px rgba(0 0 0 / 0.2), 0 1px 2px rgba(0 0 0 / 0.1);
  }

  .copy-btn-icon {
    /* Let icons use currentColor from the button */
    @apply absolute top-1/2 left-1/2 transition -translate-x-1/2 -translate-y-1/2 w-4 h-4 pointer-events-none;
    fill: currentColor;
  }
  .copy-btn .copy-icon {
    @apply opacity-100;
  }
  .copy-btn.success .copy-icon {
    @apply opacity-0;
  }
  .copy-btn .success-icon {
    @apply opacity-0;
  }
  .copy-btn.success .success-icon {
    @apply opacity-100;
  }

  /* Success state: use primary color and white icon for clear feedback */
  .copy-btn.success {
    background: var(--primary);
    color: white;
  }

  .expressive-code {
    @apply my-4;
    ::selection {
      @apply bg-[var(--codeblock-selection)];
    }
  }

  ul,
  ol {
    li::marker {
      @apply text-[var(--primary)];
    }
  }

  blockquote {
    @apply not-italic border-transparent relative;
    font-weight: inherit;

    &:before {
      @apply content-[''] absolute -left-1 block transition bg-[var(--btn-regular-bg)] h-full w-1 rounded-full;
    }

    /* Remove the double quotes from default styles */
    p:before,
    p:after {
      @apply content-none;
    }
  }

  .katex-display-container {
    max-width: 100%;
    overflow-x: auto;
    margin: 1em 0;
  }
}
